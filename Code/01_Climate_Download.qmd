---
title: "01. Download Terra Climate and Extract to Plots - from Arne"
format:
  html:
    theme: spacelab
    toc: true
    number-sections: true
---
# Download TerraClimate

Source: http://thredds.northwestknowledge.net:8080/thredds/terraclimate_aggregated.html
netcdf file format

# Set up

::: panel-tabset

## Resolution Info

  - monthly resolution
  - 0.04Â° (~4 km) grid
  - period = 1970-2023

Download global files and clip to study area
Select variables = "pet","ppt","tmax","tmin","soil", "def", "ws"

## Load Packages

```{r}
# Install and load required packages
install.load.package <- function(x) {
  if (!require(x, character.only = TRUE)) {
    install.packages(x, repos = "http://cran.us.r-project.org")
  }
  require(x, character.only = TRUE)
}

sapply(c("stringr", "raster", "terra"), install.load.package)

```

## Directories
```{r}
# Clear environment
rm(list = ls())

# Set base path depending on user
computer <- "~"

#  directores
if(computer == "~"){
  Dir.Base <- "~/Desktop/Prague/mort-likelihood/individ-tree-mort"
}else{
  Dir.Base <- "insert path"
}

Dir.Data <- file.path(Dir.Base, "Data")
Dir.Code <- file.path(Dir.Base, "Code")
Dir.Clim <- file.path(Dir.Data, "Climate")
dirs <- sapply(c(Dir.Base, Dir.Data, Dir.Code, Dir.Clim), function(x) if (!dir.exists(x)) dir.create(x))
```

:::

# Data download 

## Load the revised tree dataset
```{r}
plots <- load(file.path(Dir.Data, "full_trees_sp.Rdata"))
plots <- get(plots)
str(plots)
```

## Crop to geographic extent
```{r}
# Define geographic extent for cropping
xmin <- floor(min(plots$lng, na.rm = TRUE)) - 1
xmax <- ceiling(max(plots$lng, na.rm = TRUE)) + 1
ymin <- floor(min(plots$lat, na.rm = TRUE)) - 1
ymax <- ceiling(max(plots$lat, na.rm = TRUE)) + 1

Extent <- extent(xmin, xmax, ymin, ymax)
rast <- raster(Extent, crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
region_shp <- rasterToPolygons(rast, dissolve = TRUE)
```

## Set dataset and variables
```{r}
dataset <- "TerraClimate"
Vars <- c("PDSI", "ws") # other options: "ppt","tmax","tmin","soil","pet"
dates <- seq(1970, 2023, 1)
mo_year_names <- paste(stringr::str_pad(1:12, width = 2, pad = "0"), rep(dates, each = 12), sep = "_")
```

## Download
```{r}
# Increase timeout for downloads
options(timeout = max(1000, getOption("timeout")))

Start <- Sys.time()

for (i in seq_along(Vars)) {
  Dir.Iter <- file.path(Dir.Clim, Vars[i])
  if (!dir.exists(Dir.Iter)) dir.create(Dir.Iter)

  for (k in seq_along(dates)) {
    URL <- paste0("https://climate.northwestknowledge.net/TERRACLIMATE-DATA/", dataset, "_", Vars[i], "_", dates[k], ".nc")
    dest <- file.path(Dir.Iter, paste0(Vars[i], "_", dates[k], ".nc"))

    if (!file.exists(dest)) {
      download.file(URL, destfile = dest, mode = "wb")
    }
  }

  # Stack and rename layers
  setwd(Dir.Iter)
  BRICK <- stack(list.files(Dir.Iter, pattern = ".nc"))
  names(BRICK) <- mo_year_names

  # Crop and mask
  setwd(Dir.Clim)
  region_subset <- crop(BRICK, region_shp)
  region_subset <- mask(region_subset, region_shp)

  # Save clipped raster
  writeRaster(region_subset, filename = file.path(Dir.Clim, paste("1", dataset, Vars[i], "all_years_region", sep = "_")), format = "CDF")

  # Clean up
  unlink(Dir.Iter, recursive = TRUE)
}

End <- Sys.time()
Process.Time <- End - Start
Process.Time
```

::: 

# Extract to Plots

::: panel-tabset 

## Load tree data to extract plot locations

```{r}
trees_df <- load("~/Desktop/Prague/mort-likelihood/Data/full_trees.Rdata")
trees_df <- get(trees_df)
str(trees_df)        

# check for missing data
trees_df[is.na(trees_df$lng),]
```

## Subset plot coordinates and remove NAs
```{r}
plots <- unique(trees_df[,names(trees_df) %in% c("plotid","lng","lat")] )

which(duplicated(plots$plotid))
str(plots)

plots_copy <- as.data.frame(plots)    
```

## Climate variables and dates
```{r}
# climate variable list
Vars <- c("pet","ppt","tmax","tmin","soil", "aet", "PDSI", "ws", "def")

# define dates
dates <- seq(1970,2023,1)
start_yr <- dates[1]
end_yr <-dates[length(dates)]
```

## Identify layers
```{r}
# netcdf layer names
mo_year_names <- paste( str_pad(string = 1:12, width = 2, "left", 0),rep(start_yr:end_yr, each = 12), sep="_")
```

## Loop through variables
```{r}
plot_clim_array <- array(list(NULL),dim=length(Vars))

#index <- 1
for(index in 1:length(Vars))
{
	clim_var <- Vars[index]
		
	# load monthly Terra files (names of layers not retained - need to re-define)
	Terra_region <- stack(file.path(Dir.Clim, paste("1_TerraClimate",clim_var,"all_years_Region.nc",sep="_")))
	
	# define names = dates by month
	names(Terra_region) <- mo_year_names

	# Define plot dataframe as spatial object
	if(index == 1){
	  plots <- as.data.frame(plots)  # Convert tibble to data.frame
	  coordinates(plots) <- ~ lng + lat
	  proj4string(plots) <- crs(Terra_region)
	}

	# Extract bil values corresponding to plots (bilinear interpolation of 4 nearest cells)
	rasValue = extract(Terra_region, plots, method="bilinear")
	
	# add extracted values to plot dataset
	plot_clim <- cbind(plots_copy[,names(plots_copy) %in% c("plotid","lng","lat")], rasValue)
	head(plot_clim)
	
	# convert to long format
	plot_clim_long <- reshape(plot_clim, direction = "long", varying = list(names(plot_clim)[4:length(plot_clim)]), v.names = clim_var, 
		              idvar = c("plotid"), timevar = "period", times = mo_year_names)

	# Add year and month columns
	plot_clim_long$year <- as.numeric(substr(plot_clim_long$period, 4, 8))
	plot_clim_long$month <- as.numeric(substr(plot_clim_long$period, 1, 2))
	
	
	# Define water year  (oct to sept)
	plot_clim_long$Water_yr <- as.numeric((plot_clim_long$year)) 
	is.nxt <-  as.numeric((plot_clim_long$month)) %in% 10:12
	plot_clim_long$Water_yr[is.nxt] <- plot_clim_long$Water_yr[is.nxt]+1 

	# Define seasonal periods (3 month periods within a water year)
	plot_clim_long$Season = ifelse ((plot_clim_long$month == 12 | plot_clim_long$month == 1 | plot_clim_long$month == 2 ), "winter",      
					          ifelse ((plot_clim_long$month == 3 | plot_clim_long$month == 4 | plot_clim_long$month == 5), "spring",                 
					           ifelse ((plot_clim_long$month == 6 | plot_clim_long$month == 7 | plot_clim_long$month == 8 ), "summer",
							    "fall")))
	# combine variables
	if(index == 1) 
	{
	    plot_clim_array <- plot_clim_long
	}else{
	    plot_clim_array <- merge(plot_clim_array, plot_clim_long, by=c("plotid","lng","lat","period","year","month","Season","Water_yr"))
	}
}

colnames(plot_clim_array)[names(plot_clim_array) %in% "soil"] <- "soil_mm"
plot_clim_array <- droplevels(plot_clim_array)
summary(plot_clim_array)
str(plot_clim_array)
length(unique(plot_clim_array$plotid))

check <- unique(plot_clim_array[, names(plot_clim_array) %in% c("plotid","year")])
which(duplicated(check))
```

::: 

# Save monthly data long format

```{r}
setwd(Dir.Clim)
save(plot_clim_array, file=paste("2_Plot_terra_climate_compiled_by_month_", start_yr, "_to_",end_yr,".Rdata",sep="") )
```

