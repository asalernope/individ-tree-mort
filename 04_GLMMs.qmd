---
title: "04. GLMMs"
format:
  html:
    theme: spacelab
    toc: true
    number-sections: true
---

# Overview

This is a simpler modeling approach for individual tree mortality in the Balkan Region. This utilizes the data put together from Arne and I. The goal is to understand the relationship of individual mortality to size, species, competition, climate, and disturbance history. To achieve this goal, trees and plots with evidence of catastrophic or large scale disturbance are excluded. This excludes trees from blow downs as noted in the database tree status (13,14) and ice mortality (21,22). 


*Libraries*
```{r}
librarian::shelf(lme4, dplyr, tidyverse, ggplot2, car, sjPlot, GGally,DHARMa,pROC, glmmTMB, mgcv,fixest,gratia, corrplot)
```

*Data*
```{r}
#load("~/Desktop/Prague/mort-likelihood/Data/9_Full_model_fitting_dataset.Rdata")
load("~/Desktop/Prague/mort-likelihood/individ-tree-mort/Data/9_Trees_with_derived_climate_variables.Rdata")
load("~/Desktop/Prague/mort-likelihood/individ-tree-mort/Data/11_Combined_Targets_with_NCI.Rdata")
load("~/Desktop/Prague/mort-likelihood/individ-tree-mort/Data/Climate/TRY_climate_anom.Rdata")


trees_new <- trees %>% 
  inner_join(., clim_anom, by = "plotid") %>%
  inner_join(., all_targets %>% select(treeid, size_ratio, BA_m2_15m, NCI_norm, NCI_negexp), by = "treeid") %>%
  inner_join(., plot.id.collect, by = "plotid") %>%
    mutate(
    growth = ifelse(growth %in% 1, "canopy", "suppressed"),
    layer = as.factor(layer_corr),
   plotid =as.factor(plotid),
    WD_diff = WD_mm_mean_ann_int - WD_mm_mean_ann_ant,
    ppt_diff = ppt_mm_ann_int - ppt_mm_ann_ant,
    temp_diff = temp_k_mean_ann_int - temp_k_mean_ann_int) %>%
 # filter(!layer %in% '99',
  filter(!tree_status_census_2 %in% c(0,13,14))
```


```{r}
install.packages(c("dagitty", "ggdag"))
library(ggdag)

dag <- dagify(
  mortality ~ competition + climate_anomaly + canopy_stat + site,
  competition ~ canopy_stat + site,
  climate_anomaly ~ canopy_stat+site,
  exposure = "climate_anomaly",
  outcome = "mortality"
)

ggdag(dag, layout = "circle") +
  theme_minimal()
```


*Additional calculations*

Below is the calculation for plot level basal area (corrected for plot size), a measure indicative of plot development, and relative basal area of the individual compared to the mean basal area of trees within a plot, a measure of size dominance. Dominance of plot level species is also calculated on a basal area measure. For additional information on these calculations check Taccoen et al. (2021).

Additionally, following the climate evolution variable in Taccoen et al. 2021, we will also calculate a evolving climate variable for temperature (mean seasonal) and for climatic water balance. 


# Modeling strategy

I am following similar approaches as those laid out in BLANK, BLANK, BLANK. 
First I will compare the fit and residuals of logistic regression using 'glmmTMB' function glmmTMB using separate link functions. I believe the 'cloglog' link is more suitable for the data as there is a high imbalance in data between mortality and life with mortality being a more rare occurrence in the data. 

## All Species Model Attempt

```{r}
all_spec_re <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+scale(size_ratio)+scale(WD_mm_mean_ann_int)+stratum+
                          +offset(log(census_yrs))  + (1|species) + 
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_new)

all_spec_fe <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+stratum+(size_ratio)+scale(WD_mm_mean_ann_int)
                          +offset(log(census_yrs))  + species + 
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_new)

anova(all_spec_fe,all_spec_re)

Anova(all_spec_fe)

trees_new$predicted_prob <- predict(all_spec_fe, type = "response")

roc_obj <- roc(trees_new$mort, trees_new$predicted_prob)
auc(roc_obj)
plot(roc_obj)
```

## Fagus

Separate out by canopy status - understorey/suppressed trees have different mortality liklihoods and that climate and competition would impact this relationship differently (and size).

::: panel-tabset

### All in one - with stratum as fixed effect - should stratum (height) or growth (canopy status) be used?

```{r}
set.seed(123)  # for reproducibility

trees_FAGUS_all <- trees_new %>%
  filter(sp_group_dist %in% "Fagus", 
 !location %in% c("Stara planina","Semenic"))

fagus_mod_null <- glmmTMB(mort ~scale(poly(dbh_mm,2)) + 
                            offset(log(census_yrs)) +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_all)

# fagus_mod_no_poly <- glmmTMB(mort ~scale(dbh_mm) + 
#                             offset(log(census_yrs)) +
#                             (1|plotid),
#                family = binomial(link = "cloglog"),
#                data = trees_FAGUS_all)
# 
# anova(fagus_mod_null,fagus_mod_no_poly)

fagus_mod_grow<- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                           growth+
                           offset(log(census_yrs))+
                           (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_all)

fagus_mod_strat<- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                          stratum+
                          offset(log(census_yrs))  +
                          (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_all)
```

*anova compare*
```{r}
anova(fagus_mod_null,fagus_mod_grow,fagus_mod_strat)
```

Growth is a better predictor? 

#### Fagus - Canopy

```{r}
set.seed(420)
trees_FAGUS_can <- trees_new %>%
  filter(sp_group_dist %in% "Fagus",
        # stratum %in% "upper",
         growth %in% "canopy")# %>%
 # !location %in% c("Stara planina","Semenic")) 
# Random 90% training sample
#  sample_frac(0.90)

# 10% testing set (optional)
#trees_test <- anti_join(trees_FAGUS_can, trees_train)
```

*Null*
```{r}
fagus_can_null <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                          offset(log(census_yrs))  +
                          (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_can)
```

*Comp added*
````{r}
fagus_can_comp <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                          scale(size_ratio)+
                          offset(log(census_yrs))  +
                          (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_can)
```

*Clim added*
```{r}
fagus_can_clim <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                            scale(size_ratio) +
                            scale(terra_WB_mm_ann) *
                            scale(temp_k_mean_ann_int)+
                            offset(log(census_yrs))  +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_can)

fagus_can_clim_wd <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                            scale(size_ratio) +
                            scale(terra_WB_mm_ann) +
                            offset(log(census_yrs))  +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_can)
cor(trees_FAGUS_can$WD_mm_mean_ann_int,trees_FAGUS_can$temp_k_mean_ann_int)

#car::vif(fagus_can_clim)
```


```{r}
anova(fagus_can_null,fagus_can_comp,fagus_can_clim, fagus_can_clim_wd)

summary(fagus_can_clim_wd)
```


*No temp*
```{r}
fagus_can_noint <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                            scale(size_ratio)+
                            scale(terra_WB_mm_ann) + 
                            #  scale(ppt_diff)+
                            scale(temp_k_mean_ann_int)+
                            # scale(temp_diff)+
                            offset(log(census_yrs)) +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_can)

fagus_can_clim_notemp <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                          scale(NCI_negexp)+
                          #scale(ppt_mm_ann_int) +
                          scale(terra_WB_mm_ann)+
                          offset(log(census_yrs))  +
                          (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_can)

# car::vif(fagus_mod_clim_site) only check with glmer


```


```{r}
anova(fagus_can_noint,fagus_can_clim_notemp,fagus_can_clim,fagus_can_comp)
Anova(fagus_can_clim_notemp)
Anova(fagus_can_noint)

trees_FAGUS_can$predicted_prob <- predict(fagus_can_clim_wd, type = "response")

roc_obj <- roc(trees_FAGUS_can$mort, trees_FAGUS_can$predicted_prob)
auc(roc_obj)
plot(roc_obj)
```

#### Fagus - Suppressed

```{r}
set.seed(420)
trees_FAGUS_sup <- trees_new %>%
  filter(sp_group_dist %in% "Fagus",
        # stratum %in% "upper",
         growth %in% "suppressed")# %>%
#  !location %in% c("Stara planina","Semenic")) 
# Random 90% training sample
  sample_frac(0.90)

# 10% testing set (optional)
trees_test <- anti_join(trees_FAGUS_can, trees_train)
```

*Null*
```{r}
fagus_sup_null <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                          offset(log(census_yrs))  +
                          (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_sup)
# 
# fagus_sup_no_poly <- glmmTMB(mort ~scale(dbh_mm) +
#                             offset(log(census_yrs)) +
#                             (1|plotid),
#                family = binomial(link = "cloglog"),
#                data = trees_FAGUS_sup)
# 
# anova(fagus_sup_null,fagus_sup_no_poly)
```

*Comp added*
````{r}
fagus_sup_comp <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                          scale(size_ratio)+
                          offset(log(census_yrs))  +
                          (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_sup)
```

*Clim added*
```{r}
fagus_sup_clim <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                            scale(size_ratio) +
                            scale(terra_WB_mm_ann) *
                            scale(temp_k_mean_ann_int)+
                            offset(log(census_yrs))  +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_sup)

fagus_sup_clim_wd <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                            scale(size_ratio) +
                            scale(WD_mm_mean_ann_int) +
#scale(WD_diff)+ 
                            offset(log(census_yrs))  +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_sup)

fagus_sup_clim_wd_diff <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                            scale(size_ratio) +
                            scale(WD_mm_mean_ann_int) +
scale(WD_diff)+
                            offset(log(census_yrs))  +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_sup)

cor(trees_FAGUS_sup$WD_mm_mean_ann_int,trees_FAGUS_sup$temp_k_mean_ann_int)

```


```{r}
anova(fagus_sup_null,fagus_sup_clim,fagus_sup_clim_wd, fagus_sup_comp,fagus_sup_clim_wd_diff)

summary(fagus_sup_clim_wd_diff)
```


*No temp*
```{r}
fagus_sup_noint <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                            scale(size_ratio) +
                            scale(ppt_mm_ann_int) + 
                            scale(temp_k_mean_ann_int)+
                            offset(log(census_yrs))  +
                             
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_sup)

fagus_sup_clim_notemp <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+
                          scale(size_ratio)+
                          scale(ppt_mm_ann_int) +
                          offset(log(census_yrs))  +
                        
                          (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_sup)

# car::vif(fagus_mod_clim_site) only check with glmer

anova(fagus_sup_noint, fagus_sup_clim_notemp,fagus_sup_clim_wd_diff)
```



### Upper Canopy

 Random 75% training sample

trees_train <- trees_FAGUS_all #%>% 
  sample_frac(0.75)

 25% testing set (optional)
trees_test <- anti_join(trees_FAGUS_all, trees_train)


```{r}
trees_FAGUS_up <- trees_new %>%
  filter(sp_group_dist %in% "Fagus",
       stratum %in% "upper", 
 !location %in% c("Stara planina","Semenic" ))

ggplot(trees)+
  geom_density(aes(x = def_Evo, color = as.factor(mort)))


ggplot(trees)+
  geom_point(aes(y = dbh_mm, x = plot_ba, color = as.factor(mort)), alpha = 0.5)+
  facet_wrap(~growth)+
  theme_bw()
```

**Model comparison**

ppt_mm
```{r}

# Model WITHOUT plot-level random effect
fagus_mod_noplot <- glmmTMB(
  mort ~ scale(poly(dbh_mm, 2)) + size_ratio + scale(WD_mm_mean_seas_int) +
    offset(log(census_yrs)),
  family = binomial(link = "cloglog"),
  data = trees_FAGUS_up
)
# Simulate residuals
sim_res_noplot <- simulateResiduals(fagus_mod_noplot)

# Test spatial autocorrelation at the individual level
testSpatialAutocorrelation(sim_res_noplot,
                           x = trees_FAGUS_up$lng,
                           y = trees_FAGUS_up$lat)

sim_res_plot <- recalculateResiduals(sim_res_noplot, group = trees_FAGUS_up$plotid)

# Now test at the plot level
plot_coords <- unique(trees_FAGUS_up[, c("plotid", "lng", "lat")])
testSpatialAutocorrelation(sim_res_plot,
                           x = plot_coords$lng,
                           y = plot_coords$lat)

corrplot(cor(trees_new$))
cor(trees_FAGUS_up$WD_mm_mean_ann_int,trees_FAGUS_up$temp_k_mean_seas_int)

fagus_mod_null <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+(size_ratio)+offset(log(census_yrs))  +(1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)

#vif(fagus_mod_null)

fagus_mod_clim <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+(size_ratio)+scale(WD_mm_mean_ann_int)+
                          +offset(log(census_yrs))  +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)

fagus_mod_clim_site <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+(size_ratio)+scale(size_ratio) +  
                                 scale(WD_mm_mean_ann_int) + 
                          +offset(log(census_yrs))  +
                            (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)

trees_FAGUS_up$predicted_prob <- predict(fagus_mod_clim, type = "response")

roc_obj <- roc(trees_FAGUS_up$mort, trees_FAGUS_up$predicted_prob)
auc(roc_obj)
 plot(roc_obj)
 
 



draw(fagus_gam_clim2)

anova(fagus_mod_null,fagus_mod_clim,fagus_mod_clim_site)
Anova(fagus_mod_clim_site)

sim_res <- simulateResiduals(fagus_mod_clim)
plot(sim_res)

testSpatialAutocorrelation(sim_res,
                           x = trees_FAGUS_up$lng,
                           y = trees_FAGUS_up$lat)

sim_res_plot <- recalculateResiduals(sim_res, group = trees_FAGUS_up$plotid)

# Now test at the plot level
plot_coords <- unique(trees_FAGUS_up[, c("plotid", "lng", "lat")])
testSpatialAutocorrelation(sim_res_plot,
                           x = plot_coords$lng,
                           y = plot_coords$lat)



plotResiduals(sim_res, trees_FAGUS_up$dbh_mm)
plotResiduals(sim_res, trees_FAGUS_up$NCI_negexp)
plotResiduals(sim_res, trees_FAGUS_up$WD_mm_mean_ann_int)
plotResiduals(sim_res, trees_FAGUS_up$stand)

plotResiduals(sim_res,quantreg = T)
library(mgcv)

fagus_gam_clim1 <- gam(
  mort ~ s(dbh_mm, k = 4) +              # smooth of DBH (k controls wiggliness)
         s(NCI_negexp, k = 4) + 
         s(WD_mm_mean_ann_int, k = 4) +  # smooth of water deficit
         s(plotid, bs = "re") +          # random effect for plot
         offset(log(census_yrs)),
  family = binomial(link = "cloglog"),
  data = trees_FAGUS_up,
  method = "REML"
)

fagus_gam_clim2 <- gam(
  mort ~ s(dbh_mm, k = 4) +              # smooth of DBH (k controls wiggliness)
         s(size_ratio, k=4) + 
         WD_mm_mean_ann_int +  #  water deficit - doesn't need smooth
         s(plotid, bs = "re") +          # random effect for plot
         offset(log(census_yrs)),
  family = binomial(link = "cloglog"),
  data = trees_FAGUS_up,
  method = "REML")

anova(fagus_gam_clim1,fagus_gam_clim2)

draw(fagus_gam_clim1)
summary(fagus_gam_clim1
        )


# Extract smooth estimates for the random effect term
re_plot <- smooth_estimates(fagus_gam_clim1, smooth = "s(plotid)")

# Plot with ggplot
ggplot(re_plot, aes(x = .estimate, y = fct_reorder(plotid,.estimate))) +
  geom_point() +
  geom_errorbarh(aes(xmin = .estimate - .se, xmax = .estimate + .se), height = 0.2) +
  labs(
    x = "Random Effect Estimate (log hazard scale)",
    y = "Plot ID",
    title = "Random Intercepts for Plot (from GAM)"
  ) +
  theme_minimal()

```



```{r}
fagus_mod_null <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+scale(plot_ba)+offset(log(census_yrs)) + (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)

fagus_mod_up <- glmmTMB(mort ~ scale(poly(ba_m2,2))+scale(plot_ba)*scale(WD_mm_mean_ann_int)+ scale(Fagus)+scale(Picea)  + scale(Abies) + scale(coefvar) +offset(log(census_yrs)) +(1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)





anova(fagus_mod_null,fagus_mod_up)

fagus_mod_up1 <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+scale(temp_k_mean_ann_int)*scale(ppt_mm_ann_int)+
              offset(log(census_yrs)),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)


fagus_mod_up2 <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+scale(temp_k_mean_seas_int)*scale(ppt_mm_seas_int)+
                scale(Fagus)+scale(Picea)  + scale(Abies) + scale(coefvar) +
               scale(plot_ba)+ offset(log(census_yrs)) +(1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)

summary(fagus_mod_up)

fagus_mod_null_gam <- gam(
  mort ~ s(dbh_mm, k = 5) +
         s(plot_ba, k = 5) +
        s(WD_mm_mean_ann_int, k = 5) +
         offset(log(census_yrs)) +
         # s(stand, bs = "re") +
         s(plotid, bs = "re"),
  family = binomial(link = "cloglog"),
  data = trees_FAGUS_up
)


cor(trees$terra_WD_mm_mean_seas_int, trees$temp_k_mean_seas_int)
   # scale(Fagus)+scale(Picea)  + scale(Abies) + scale(coefvar) + scale(relCirc)+
   #             scale(plot_ba)+

anova(fagus_mod_null,fagus_mod_up1,fagus_mod_up,fagus_mod_up2)
summary(fagus_mod_up2)

sim_res <- testOutliers(fagus_mod_up1, type = 'bootstrap')
plot(sim_res)

plotResiduals(sim_res, trees_FAGUS_up$temp_k_mean_ann_int)
plotResiduals(sim_res, trees_FAGUS_up$plot_ba)
plotResiduals(sim_res, trees_FAGUS_up$ppt_mm_ann_int)
plotResiduals(sim_res, trees_FAGUS_up$dbh_mm)

plotResiduals(sim_res,quantreg = T)



# Calculate overdispersion statistic
overdisp_fun <- function(model) {
  rdf <- df.residual(model)
  rp <- residuals(model, type = "pearson")
  Pearson.chisq <- sum(rp^2)
  prat <- Pearson.chisq / rdf
  pval <- pchisq(Pearson.chisq, df = rdf, lower.tail = FALSE)
  c(chisq = Pearson.chisq, ratio = prat, rdf = rdf, p = pval)
}

overdisp_fun(fagus_mod_up2)

 testDispersion(sim_res)
testZeroInflation(sim_res)
testResiduals(sim_res)

```

```{r}
fagus_mod_upun <-  glmmTMB(mort ~ scale(dbh_mm)+scale(temp_k_mean_ann_int)*scale(ppt_mm_ann_int)+
               #  scale(Fagus)+scale(Picea)  + scale(Abies) + 
                   scale(coefvar) +
               scale(plot_ba)+ offset(log(census_yrs)) + (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_up)

summary(fagus_mod_upun)
AIC(fagus_mod_upun,fagus_mod_up)
BIC(fagus_mod_upun,fagus_mod_up)

anova(fagus_mod_upun,fagus_mod_up)
```

```{r}
trees_FAGUS_up$predicted_prob <- predict(fagus_mod_up, type = "response")

roc_obj <- roc(trees_FAGUS_up$mort, trees_FAGUS_up$predicted_prob)
auc(roc_obj)
 plot(roc_obj)
```
 
```{r}
trees_FAGUS_up$predicted_prob <- predict(fagus_mod_clim, type = "response", re.form = NA)

sim_res <- simulateResiduals(fittedModel = fagus_mod_clim)
plot(sim_res)

plotResiduals(sim_res, trees_FAGUS_up$temp_k_mean_ann_int)
plotResiduals(sim_res, trees_FAGUS_up$plot_ba)
plotResiduals(sim_res, trees_FAGUS_up$ppt_mm_ann_int)
plotResiduals(sim_res, trees_FAGUS_up$dbh_mm)

plotResiduals(sim_res,quantreg = T)

plotQQunif(sim_res) # left plot in plot.DHARMa()
plotResiduals(sim_res) # right plot in plot.DHARMa()


testQuantiles(sim_res)
  
plot(sim_res, asFactor = T)
?simulateResiduals
library(ggeffects)

preds <- ggpredict(model, terms = c("dbh_mm [all]", "temp_k_ann_diff [all]","WB_mm_mean_summer_diff [all]"))  # or other variables
plot(preds) + ggtitle("Predicted Mortality by dbh and Stratum")

library(ggplot2)

ggplot(trees, aes(x = (temp_k_ann_diff), y = predicted_prob)) +
  geom_point(alpha = 0.3) +
  geom_smooth(method = "loess", se = FALSE) +
 # facet_wrap(~stand)+
  labs(title = "Predicted Mortality vs. Tree Size",
       y = "Predicted Mortality Probability")


# 1. build grid (other covariates fixed at mean/mode)
newdat <- expand.grid(
  dbh_mm                 = mean(trees_FAGUS$dbh_mm),
  stratum                = 0,
  temp_k_ann_diff        = seq(min(trees_FAGUS$temp_k_ann_diff),
                               max(trees_FAGUS$temp_k_ann_diff), length = 100),         # already scaled → mean = 0
  Fagus                  = 0,
  Picea                  = 0,
  Abies                  = 0,
  WB_mm_mean_summer_diff = 0,
  plot_ba                = 0,
  relCirc                = 0,
  census_yrs             = trees_FAGUS$census_yrs          # typical interval
)

# 2. get marginal predictions (no random effects!)
newdat$pred <- predict(fagus_mod, newdata = newdat,
                       type = "response", re.form = NA)

# 3. plot
ggplot(newdat,
       aes(x = dbh_mm, y = pred, colour = stratum)) +
  geom_line(size = 1) +
  labs(y = "Predicted 5‑yr mortality",
       x = "DBH (mm)",
       colour = "Stratum") +
  theme_minimal()

# https://github.com/florianhartig/DHARMa/issues/396

```


### Lower

```{r}
trees_FAGUS_low <- trees %>%
  filter(sp_group_dist %in% "Fagus",
         stratum %in% "lower")
```

**Model comparison**
```{r}
fagus_mod_low <- glmmTMB(mort ~ scale(poly(dbh_mm,2))+scale(temp_k_mean_seas_int)*scale(ppt_mm_seas_int)+
                 scale(Fagus)+ scale(Picea)  + scale(Abies) + 
                   scale(coefvar) +
               scale(plot_ba)+ offset(log(census_yrs)) + (1|stand),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS_low)

summary(fagus_mod_low)

sim_res <- simulateResiduals(fittedModel = fagus_mod_low)
plot(sim_res, rank = T)
```


```{r} 
all_mod <- glmmTMB(mort ~ scale(dbh_mm) +scale(temp_k_ann_diff) +
              #  scale(Fagus) + scale(Picea)  + 
                scale(WB_mm_mean_summer_diff) + scale(plot_ba)+ scale(relCirc)+ offset(log(census_yrs)) + scale(time_since_dist_recent)+scale(my_rec_sev)+(1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_FAGUS)

```


```{r}
trees_ABIES <- trees %>%
  filter(sp_group_dist %in% "Abies",
         stratum %in% "upper")# %>%

model <-glmmTMB(mort ~ scale(poly(dbh_mm,2))+scale(temp_k_mean_ann_int)*scale(ppt_mm_ann_int)+
                 scale(Fagus)+scale(Picea)  + scale(Abies) + scale(coefvar) +
               scale(plot_ba)+ offset(log(census_yrs)) + (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_ABIES)

model2 <-glmmTMB(mort ~ scale(dbh_mm)+scale(temp_k_mean_ann_int)*scale(ppt_mm_ann_int)+
                 scale(Fagus)+scale(Picea)  + scale(Abies) + scale(coefvar) +
               scale(plot_ba)+ offset(log(census_yrs)) + (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_ABIES)
anova(model,model2)

summary(model2)


trees_ABIES$predicted_prob <- predict(model, type = "response")

roc_obj <- roc(trees_ABIES$mort, trees_ABIES$predicted_prob)
auc(roc_obj)
 plot(roc_obj)
 
 sim_res <- simulateResiduals(fittedModel = model)
plot(sim_res, rank = T)

plotResiduals(sim_res, trees_ABIES$temp_k_ann_diff)
plotResiduals(sim_res, trees_ABIES$plot_ba)
plotResiduals(sim_res, trees_ABIES$WB_mm_mean_summer_diff)
plotResiduals(sim_res, trees_ABIES$dbh_mm)

tab_model(model)

 testDispersion(sim_res)
testZeroInflation(sim_res)
testResiduals(sim_res)

trees_ABIES <- trees %>%
  filter(sp_group_dist %in% "Picea",
         stratum %in% "lower")# %>%

model <-glmmTMB(mort ~ scale(poly(dbh_mm,2))+scale(temp_k_mean_ann_int)*scale(ppt_mm_ann_int)+
              #   scale(Fagus)+scale(Picea)  + scale(Abies) + scale(coefvar) +
               scale(plot_ba)+ offset(log(census_yrs)) + (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_ABIES)
summary(model)


model2 <-glmmTMB(mort ~ scale(dbh_mm)+scale(temp_k_mean_ann_int)*scale(ppt_mm_ann_int)+
            #     scale(Fagus)+scale(Picea)  + scale(Abies) + scale(coefvar) +
               scale(plot_ba)+ offset(log(census_yrs)) + (1|plotid),
               family = binomial(link = "cloglog"),
               data = trees_ABIES)

anova(model2,model)

```
